#!/bin/bash
#sudo sed -i -e "s/'Ubuntuuu'/'Ubuntu'/" /boot/grub/grub.cfg
rmAdMenu()
{
   rm /etc/grub.d/10_linux
   cp /etc/grubcfg/newcfgs/10_linuxNoMenu /etc/grub.d/10_linuxNoMenu
   chmod +x /etc/grub.d/10_linuxNoMenu
   chgrp root /etc/grub.d/10_linuxNoMenu
   chown root /etc/grub.d/10_linuxNoMenu
}

rmMemOpts()
{
   rm /etc/grub.d/20_memtest86+
}

save()
{
   cp -rf /etc/grub.d /etc/grubcfg/backups/$1
}

load()
{
   rm -rf /etc/grub.d
   cp -rf /etc/grubcfg/backups/$1 /etc/grub.d
}

list()
{
   ls /etc/grubcfg/backups/
}

addPicture()
{
   cp $1 /boot/grub/image.png
}

removePicture()
{
   rm /boot/grub/image.png
}

if [ $EUID != 0 ]; then
   echo "Error: Please run as root"
   exit
fi

if [ "$1" == '--clean' ]; then
   echo "cleaning grub"
   rmAdMenu
   rmMemOpts
elif [ "$1" == '--restore' ]; then
   echo "Restoring origional grub"
   load orig
elif [ "$1" == '--load' ] && [ "$2" != '' ]; then
   echo "Restoring grub from file"
   load $2   
elif [ "$1" == '--save' ] && [ "$2" != '' ]; then
   echo "Backing up current grub to file"
   save $2
elif [ "$1" == '--list' ]; then
   list
   exit
elif [ "$1" == '--add_picture' ]; then
   echo "Copying Picture"
   addPicture $2
elif [ "$1" == '--rm_picture' ]; then
   echo "Removing Picture"
   removePicture
elif [ "$1" == '--disp_grub' ]; then
   grub_cfg_parser
   exit
elif [ "$1" == '--help' ]; then
   echo "Supported opreations include : --clean, --restore, --save, --load, --list, --add-picture, --rm-picture adn --help"
else
   echo "Usage error, run grubcfg --help"
fi

update-grub
